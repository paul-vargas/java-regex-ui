/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.paulvargas.tools;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JRootPane;
import javax.swing.JTextArea;

/**
 *
 * @author pvargasbext
 */
public class UnicodeTool extends javax.swing.JFrame {

	private static final Color RGB0B344B = new Color(0x0B344B);
	private static final Color RGBCBD1C4 = new Color(0xCBD1C4);
	private static final Color RGB207884 = new Color(0x207884);
	private static final Pattern PATTERN = Pattern.compile("\\\\u([0-9a-f]{4})");
	
	/**
	 * Creates new form UnicodeTool
	 */
	public UnicodeTool() {
		setUndecorated(true);
		getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
		initComponents();
		setColors();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unicodePopupMenu = new javax.swing.JPopupMenu();
        escapeMenuItem = new javax.swing.JMenuItem();
        escapePopupMenu = new javax.swing.JPopupMenu();
        unescapeMenuItem = new javax.swing.JMenuItem();
        splitPane = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        unicodeScrollPane = new javax.swing.JScrollPane();
        unicodeTextArea = new javax.swing.JTextArea();
        escapeScrollPane = new javax.swing.JScrollPane();
        escapeTextArea = new javax.swing.JTextArea();
        rightPanel = new javax.swing.JPanel();
        analyzeScrollPane = new javax.swing.JScrollPane();
        analyzeTextArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        decrementMenuItem = new javax.swing.JMenuItem();
        incrementMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        noasciiCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();

        escapeMenuItem.setText("Unicode to Escape");
        escapeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escapeMenuItemActionPerformed(evt);
            }
        });
        unicodePopupMenu.add(escapeMenuItem);

        unescapeMenuItem.setText("Escape to Unicode");
        unescapeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unescapeMenuItemActionPerformed(evt);
            }
        });
        escapePopupMenu.add(unescapeMenuItem);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unicode Tool");

        splitPane.setResizeWeight(0.5);

        leftPanel.setLayout(new java.awt.GridLayout(2, 1));

        unicodeScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Unicode"));

        unicodeTextArea.setColumns(20);
        unicodeTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        unicodeTextArea.setLineWrap(true);
        unicodeTextArea.setComponentPopupMenu(unicodePopupMenu);
        unicodeScrollPane.setViewportView(unicodeTextArea);

        leftPanel.add(unicodeScrollPane);

        escapeScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Escape"));

        escapeTextArea.setColumns(20);
        escapeTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        escapeTextArea.setLineWrap(true);
        escapeTextArea.setComponentPopupMenu(escapePopupMenu);
        escapeScrollPane.setViewportView(escapeTextArea);

        leftPanel.add(escapeScrollPane);

        splitPane.setLeftComponent(leftPanel);

        rightPanel.setLayout(new java.awt.GridLayout(1, 0));

        analyzeScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Analyze"));

        analyzeTextArea.setColumns(20);
        analyzeTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        analyzeScrollPane.setViewportView(analyzeTextArea);

        rightPanel.add(analyzeScrollPane);

        splitPane.setRightComponent(rightPanel);

        getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);

        fileMenu.setText("File");

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        viewMenu.setText("View");

        decrementMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        decrementMenuItem.setText("Decrement Font Size");
        decrementMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrementMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(decrementMenuItem);

        incrementMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_MASK));
        incrementMenuItem.setText("Increment Font Size");
        incrementMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incrementMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(incrementMenuItem);

        menuBar.add(viewMenu);

        settingsMenu.setText("Settings");

        noasciiCheckBoxMenuItem.setText("No escape ASCII");
        settingsMenu.add(noasciiCheckBoxMenuItem);

        menuBar.add(settingsMenu);

        setJMenuBar(menuBar);

        setSize(new java.awt.Dimension(752, 402));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        dispose();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void decrementMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrementMenuItemActionPerformed
		Component[] components = new Component[]{unicodeTextArea, escapeTextArea, analyzeTextArea};
		for (Component c : components) {
			Font font = c.getFont();
			c.setFont(new Font(font.getName(), font.getStyle(), font.getSize() - 1));
		}
		validate();
    }//GEN-LAST:event_decrementMenuItemActionPerformed

    private void incrementMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incrementMenuItemActionPerformed
		Component[] components = new Component[]{unicodeTextArea, escapeTextArea, analyzeTextArea};
		for (Component c : components) {
			Font font = c.getFont();
			c.setFont(new Font(font.getName(), font.getStyle(), font.getSize() + 1));
		}
		validate();
    }//GEN-LAST:event_incrementMenuItemActionPerformed

    private void escapeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escapeMenuItemActionPerformed
		analyzeTextArea.setText("");
		escapeTextArea.setText("");
		for (char ch : unicodeTextArea.getText().toCharArray()) {
			String str = Character.toString(ch);
			String hex = toHexUnicode(ch);
			String name = Character.getName(ch);			
			if (noasciiCheckBoxMenuItem.isSelected() && str.matches("^\\p{ASCII}$")) {
				escapeTextArea.append(str);
			} else {
				analyzeTextArea.append(String.format("%s %s : %s%n", hex, name, str));
				escapeTextArea.append(hex);
			}
		}
    }//GEN-LAST:event_escapeMenuItemActionPerformed

    private void unescapeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unescapeMenuItemActionPerformed
        final StringBuffer sb = new StringBuffer();
        final Matcher matcher = PATTERN.matcher(escapeTextArea.getText());
        while (matcher.find()) {
            matcher.appendReplacement(sb, Character.toString((char)Integer.parseInt(matcher.group(1), 16)));
        }
        matcher.appendTail(sb);
        unicodeTextArea.setText(sb.toString());
        escapeMenuItemActionPerformed(evt);
    }//GEN-LAST:event_unescapeMenuItemActionPerformed

	public void setColors() {
		JTextArea[] array = new JTextArea[]{unicodeTextArea, escapeTextArea, analyzeTextArea};
		for (final JTextArea textArea : array) {
			textArea.setBackground(RGB0B344B);
			textArea.setForeground(RGBCBD1C4);
			textArea.setCaretColor(Color.RED);
			textArea.setSelectedTextColor(Color.LIGHT_GRAY);
			textArea.setSelectionColor(Color.BLACK);
		}
	}
	
	private String toHexUnicode(final int number) {
		return String.format("\\u%04x", number);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		/*try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(UnicodeTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(UnicodeTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(UnicodeTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(UnicodeTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}*/
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new UnicodeTool().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane analyzeScrollPane;
    private javax.swing.JTextArea analyzeTextArea;
    private javax.swing.JMenuItem decrementMenuItem;
    private javax.swing.JMenuItem escapeMenuItem;
    private javax.swing.JPopupMenu escapePopupMenu;
    private javax.swing.JScrollPane escapeScrollPane;
    private javax.swing.JTextArea escapeTextArea;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem incrementMenuItem;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JCheckBoxMenuItem noasciiCheckBoxMenuItem;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JMenuItem unescapeMenuItem;
    private javax.swing.JPopupMenu unicodePopupMenu;
    private javax.swing.JScrollPane unicodeScrollPane;
    private javax.swing.JTextArea unicodeTextArea;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
}
